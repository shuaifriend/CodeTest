{"version":3,"sources":["store/reducer.js","store/index.js","store/actionTypes.js","TodoList.js","store/actionCreatores.js","index.js"],"names":["defaultState","inputValue","list","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","store","createStore","state","action","type","newState","JSON","parse","stringify","value","push","TodoList","props","getState","style","margin","width","marginBottom","this","onChange","inputChange","onClick","clickButton","map","item","index","key","href","target","PureComponent","connect","dispatch","e","App","ReactDOM","render","document","getElementById"],"mappings":"+PAEMA,EAAe,CACjBC,WAAY,kBACZC,KAAM,CACF,wFACA,wE,QCAFC,GAFqBC,OAAOC,qCAC9BD,OAAOC,qCAAqC,IAAIC,KAClBC,YAAgBC,MAOnCC,EALDC,aDEC,WAAmC,IAAlCC,EAAiC,uDAAzBX,EAAcY,EAAW,uCAE7C,GEZyB,gBFYtBA,EAAOC,KAAuB,CAC7B,IAAMC,EAAWC,KAAKC,MAAMD,KAAKE,UAAUN,IAE3C,OADAG,EAASb,WAAaW,EAAOM,MACtBJ,EAEX,GEhBqB,YFgBlBF,EAAOC,KAAmB,CACzB,IAAMC,EAAWC,KAAKC,MAAMD,KAAKE,UAAUN,IAG3C,OAFAG,EAASZ,KAAKiB,KAAKL,EAASb,YAC5Ba,EAASb,WAAa,GACfa,EAEX,OAAOH,ICbPR,G,OEFEiB,E,YACF,WAAYC,GAAQ,IAAD,8BACf,4CAAMA,KACDV,MAAQF,EAAMa,WAFJ,E,sEAKf,OACI,yBAAKC,MAAO,CAACC,OAAO,OAAQC,MAAO,UAC/B,oDACA,yBAAKF,MAAO,CAACG,aAAa,SACtB,6BACI,2BAAOR,MAAOS,KAAKN,MAAMpB,WAAY2B,SAAUD,KAAKN,MAAMQ,cAC1D,4BAAQC,QAASH,KAAKN,MAAMU,aAA5B,iBAEJ,4BAEQJ,KAAKN,MAAMnB,KAAK8B,KAAI,SAACC,EAAKC,GACtB,OAAQ,wBAAIC,IAAKD,GAAQD,QAKzC,6BACA,uBAAGG,KAAK,kFAAkFC,OAAO,UAAjG,uC,GAvBOC,iBAiDRC,eApBM,SAAC5B,GAClB,MAAO,CACHV,WAAYU,EAAMV,WAClBC,KAAMS,EAAMT,SAII,SAACsC,GACrB,MAAO,CACHX,YADG,SACSY,GACR,IAAM7B,EC1CyB,CACvCC,KFNyB,cEOzBK,MDwCyCuB,EAAEJ,OAAOnB,OAC1CsB,EAAS5B,IAEbmB,YALG,WAOCS,EC1CsB,CAC9B3B,KFVqB,gBCwDV0B,CAAuCnB,GElDhDsB,EACF,kBAAC,IAAD,CAAUjC,MAAOA,GACb,kBAAC,EAAD,OAIRkC,IAASC,OAAOF,EAAKG,SAASC,eAAe,W","file":"static/js/main.70d9bb96.chunk.js","sourcesContent":["import { CHANGE_INPUT , ADD_ITEM } from './actionTypes'\n\nconst defaultState = {\n    inputValue: 'Write Something',\n    list: [\n        '早8点晨会，分配今天的代码任务',\n        '早9点和项目经理开沟通会'\n    ]\n}\n\nexport default (state = defaultState, action) => {\n    // Reducer里只能接收state，不能改变state\n    if(action.type === CHANGE_INPUT) {\n        const newState = JSON.parse(JSON.stringify(state));\n        newState.inputValue = action.value;\n        return newState;\n    }\n    if(action.type === ADD_ITEM) {\n        const newState = JSON.parse(JSON.stringify(state));\n        newState.list.push(newState.inputValue);\n        newState.inputValue = '';\n        return newState;\n    }\n    return state;\n}\n","import {createStore, applyMiddleware, compose} from 'redux'\nimport reducer from './reducer'\nimport thunk from 'redux-thunk'\n\nconst composeEnhancers =   window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({}):compose;\nconst enhancer = composeEnhancers(applyMiddleware(thunk));\n\nconst store = createStore(\n    reducer,\n    enhancer\n)\n\nexport default store;\n","export const  CHANGE_INPUT = 'changeInput'\nexport const  ADD_ITEM = 'addItem'\n","import React, { PureComponent } from 'react';\nimport store from './store'\nimport {connect} from 'react-redux'\nimport {\n    changeInputAction, \n    addItemAction\n} from './store/actionCreatores'\n\nclass TodoList extends PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = store.getState()\n    }\n    render() { \n        return (\n            <div style={{margin:'10px', width: '600px'}}>\n                <h1>react-redux-todolist</h1>\n                <div style={{marginBottom:'10px'}}>\n                    <div>\n                        <input value={this.props.inputValue} onChange={this.props.inputChange} />\n                        <button onClick={this.props.clickButton}>提交</button>\n                    </div>\n                    <ul>\n                        {\n                            this.props.list.map((item,index)=>{\n                                return (<li key={index}>{item}</li>)\n                            })\n                        }\n                    </ul>\n                </div>\n                <hr />\n                <a href=\"https://github.com/dunizb/CodeTest/tree/master/React/redux/react-redux-todolist\" target=\"_blank\">查看源代码</a>     \n            </div>\n        );\n    }\n}\n\nconst stateToProps = (state) => {\n    return {\n        inputValue: state.inputValue,\n        list: state.list\n    }\n}\n \nconst dispatchToProps = (dispatch) => {\n    return {\n        inputChange(e) {\n            const action = changeInputAction(e.target.value)\n            dispatch(action);\n        },\n        clickButton() {\n            const action = addItemAction()\n            dispatch(action);\n        }\n    }\n}\n\nexport default connect(stateToProps, dispatchToProps)(TodoList);\n","import { \n    CHANGE_INPUT , \n    ADD_ITEM\n} from './actionTypes'\n\nexport const changeInputAction = (value)=>({\n    type: CHANGE_INPUT,\n    value\n})\n\nexport const addItemAction = ()=>({\n    type: ADD_ITEM\n})\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport TodoList from './TodoList';\n\nimport { Provider } from 'react-redux'\nimport store from './store'\n\nconst App = (\n    <Provider store={store}>\n        <TodoList />\n    </Provider>\n)\n\nReactDOM.render(App, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}
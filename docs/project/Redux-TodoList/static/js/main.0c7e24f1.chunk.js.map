{"version":3,"sources":["store/reducer.js","store/index.js","store/actionTypes.js","store/actionCreatores.js","TodoList.js","index.js"],"names":["defaultState","inputValue","list","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","store","createStore","state","action","console","log","type","newState","JSON","parse","stringify","value","push","splice","index","concat","API","baseUrl","TodoList","props","handleMockData","setState","loading","callback","dispatch","axios","get","then","res","getListAction","data","storeChange","getState","handleClick","changeInputValue","bind","subscribe","style","margin","width","marginBottom","placeholder","this","onChange","marginRight","onClick","header","footer","href","rel","target","bordered","dataSource","renderItem","item","Item","actions","theme","key","deleteItem","e","deleteItemAction","PureComponent","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0c7e24f1.chunk.js","sourcesContent":["import { DATA_LIST, CHANGE_INPUT , ADD_ITEM , DELETE_ITEM } from './actionTypes'\n\nconst defaultState = {\n    inputValue: 'Write Something',\n    list: [\n        '早8点晨会，分配今天的代码任务',\n        '早9点和项目经理开沟通会'\n    ]\n}\n\nexport default (state = defaultState, action) => {\n    console.log(state, action);\n    // Reducer里只能接收state，不能改变state\n    if(action.type === CHANGE_INPUT) {\n        const newState = JSON.parse(JSON.stringify(state));\n        newState.inputValue = action.value;\n        return newState;\n    }\n    if(action.type === ADD_ITEM) {\n        const newState = JSON.parse(JSON.stringify(state));\n        newState.list.push(newState.inputValue);\n        newState.inputValue = '';\n        return newState;\n    }\n    if(action.type === DELETE_ITEM) {\n        const newState = JSON.parse(JSON.stringify(state));\n        newState.list.splice(action.index, 1)\n        return newState;\n    }\n    if(action.type === DATA_LIST) {\n        const newState = JSON.parse(JSON.stringify(state));\n        newState.list = newState.list.concat(action.value)\n        return newState;\n    }\n    return state;\n}\n","import {createStore, applyMiddleware, compose} from 'redux'\nimport reducer from './reducer'\nimport thunk from 'redux-thunk'\n\nconst composeEnhancers =   window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({}):compose;\nconst enhancer = composeEnhancers(applyMiddleware(thunk));\n\nconst store = createStore(\n    reducer,\n    enhancer\n)\n\nexport default store;\n","export const  CHANGE_INPUT = 'changeInput'\nexport const  ADD_ITEM = 'addItem'\nexport const  DELETE_ITEM = 'deleteItem'\nexport const  DATA_LIST = 'dataList'\n","import axios from 'axios'\n\nimport { \n    CHANGE_INPUT , \n    ADD_ITEM , \n    DELETE_ITEM, \n    DATA_LIST \n} from './actionTypes'\n\nconst baseUrl = 'https://www.fastmock.site/mock/6099b9719bd59b55a0f21894438cc412/react'\nconst API = {\n    '/list': baseUrl + '/list'\n}\n\nexport const changeInputAction = (value)=>({\n    type:CHANGE_INPUT,\n    value\n})\n\nexport const addItemAction = ()=>({\n    type:ADD_ITEM\n})\n\nexport const deleteItemAction = (index)=>({\n    type: DELETE_ITEM,\n    index\n})\n\nexport const getListAction = (list)=>({\n    type: DATA_LIST,\n    value: list\n})\n\nexport const getTodoList = (callback) => {\n    return (dispatch) => {\n        axios.get(API['/list']).then(res => {\n            const list = res.data.data.list\n            const action = getListAction(list);\n            dispatch(action);\n            callback();\n        })\n    }\n}\n","import React, { PureComponent } from 'react';\nimport {Input,Button,List,Icon} from 'antd'\nimport store from './store'\nimport {\n    getTodoList, \n    changeInputAction, \n    addItemAction, \n    deleteItemAction\n} from './store/actionCreatores'\n\nclass TodoList extends PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = store.getState()\n        this.changeInputValue = this.changeInputValue.bind(this)\n        store.subscribe(this.storeChange)\n    }\n    render() { \n        return (\n            <div style={{margin:'10px', width: '600px'}}>\n                <h1>React and Redux TodoList</h1>\n                <div style={{marginBottom:'10px'}}>\n                    <Input \n                        placeholder={this.state.inputValue} \n                        onChange={this.changeInputValue}\n                        value={this.state.inputValue}\n                        style={{width: '250px',marginRight:'10px'}}/>\n                    <Button type=\"primary\" onClick={this.handleClick}>增加</Button>\n                    <Button type=\"link\" onClick={this.handleMockData}>Mock数据</Button>\n                </div>\n                <List\n                    header={<strong>任务列表</strong>}\n                    footer={<a href=\"https://github.com/dunizb/CodeTest/tree/master/React/redux/React-and-Redux-TodoList\" rel=\"noopener noreferrer\" target=\"_blank\">查看代码</a>}\n                    bordered\n                    dataSource={this.state.list}\n                    loading={this.state.loading}\n                    renderItem={(item, index) => (\n                        <List.Item\n                            actions={[<Icon type=\"close-circle\" theme=\"filled\" key=\"delete-item\" onClick={this.deleteItem.bind(this, index)} />]}\n                        > \n                            {item}\n                        </List.Item>\n                    )}\n                />\n            </div>\n        );\n    }\n\n    handleMockData = () => {\n        this.setState({ loading: true })\n        const action = getTodoList(() => this.setState({ loading: false }));\n        store.dispatch(action);\n    }\n\n    changeInputValue(e){\n        const action = changeInputAction(e.target.value);\n        store.dispatch(action);\n    }\n\n    storeChange = () => {\n        const action = store.getState();\n        this.setState(action);\n    }\n\n    handleClick = () => {\n        const action = addItemAction();\n        store.dispatch(action);\n    }\n\n    deleteItem(index) {\n        const action = deleteItemAction(index);\n        store.dispatch(action);\n    }\n}\n \nexport default TodoList;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport TodoList from './TodoList';\nimport 'antd/dist/antd.css'\n\nReactDOM.render(<TodoList />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}